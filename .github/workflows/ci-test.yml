name: Test and publish
run-name: "Branch: ${{ github.head_ref || github.ref_name	}}, event ${{ github.event_name	}}, commit sha ${{ inputs.SHA || github.sha }} by @${{ github.actor }}"
on:
  workflow_dispatch:
  push:
    branches: []
  pull_request:
    branches: [ main ]
env:
  DB_USER: test
  DB_PASSWORD: testuser4321
  DB_NAME: test
  DB_PORT: 3306
  DB_HOST: 127.0.0.1
  COR_ORIGIN: '*'
  API_PATH: /api/v1
jobs:
  run-jest-test:
    name: Test code
    runs-on: ubuntu-latest
    services:
      mariadb:
        image: mariadb:lts
        env:
          MARIADB_USER: test
          MARIADB_PASSWORD: testuser4321
          MARIADB_DATABASE: test
          MARIADB_ALLOW_EMPTY_ROOT_PASSWORD: true
        ports:
          - 3306:3306
    steps:
      # - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
      # - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      # - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: use node v18.20.2
        uses: actions/setup-node@v4
        with:
          node-version: '18.20.2'
          cache: 'npm'
      - name: Set up .env file
        run: |
          touch .env.test 
          echo "DB_USER=${DB_USER}" >> .env.test
          echo "DB_PASSWORD=${DB_PASSWORD}" >> .env.test
          echo "DB_NAME=${DB_NAME}" >> .env.test
          echo "DB_PORT=${DB_PORT}" >> .env.test
          echo "DB_HOST=${DB_HOST}" >> .env.test
          echo "COR_ORIGIN=${COR_ORIGIN}" >> .env.test
          echo "API_PATH=${API_PATH}" >> .env.test

      - name: Install dependencies
        run: npm install
      - name: Migrate db
        run: npm run sequelize:migrate
      - name: Seed db data
        run: npm run sequelize:seed
      - name: Run tests
        run: npm run test
  publish-docker:
    runs-on: ubuntu-latest
    needs: run-jest-test
    # if: github.head_ref == 'main' || github.ref_name == 'main' # run this job only for the main branch
    environment: ci
    steps:
      -
        name: Checkout
        uses: actions/checkout@v4
      - 
        name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKERHUB_USERNAME }}/backend
          tag: |
            type=ref,event=branch
            type=ref,event=pr
      - 
        name: Set short sha
        id: sha_short
        run: |
          calculatedSha=$(git rev-parse --short ${{ github.sha }})
          echo "sha_short=$calculatedSha" >> $GITHUB_OUTPUT
      -
        name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: "${{ steps.meta.outputs.tags }}-${{ steps.sha_short.outputs.sha_short }}"
          labels: ${{ steps.meta.outputs.labels }}
      - name: Trigger update workflow in the manifests repository
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.PAT }}
          script: |
            await github.rest.actions.createWorkflowDispatch({
              owner: 'DoTruong1',
              repo: 'ansible',
              workflow_id: 'update-tags.yaml',
              ref: 'main',
              inputs: {
                message: '${{ steps.git-message.outputs.message }}',
                image: "${{ secrets.DOCKERHUB_USERNAME }}/backend"
                tags: ${{ steps.meta.outputs.tags }}-${{ steps.sha_short.outputs.sha_short }}',
                sha: '${{ steps.git-sha.outputs.sha }}'
              }
            })

